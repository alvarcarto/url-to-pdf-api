version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.3.1

commands:
  deploy-service-to-eks:
    parameters:
      namespace:
        type: string
      environment:
        type: string
      service:
        type: string
    steps:
      - run:
          name: "Deploy service to EKS"
          command: |
            kubectl config set-context --current --namespace=<< parameters.namespace >>
            cd infra-k8s
            helm upgrade -f helm/<< parameters.service >>/<< parameters.environment >>/values.yaml << parameters.service >> ./helm/<< parameters.service >>

  setup-infra-k8s-repo:
    steps:
      - run:
          name: "Clone and Setup infra-k8s repo"
          command: |
            git clone git@github.com:mietright/infra-k8s.git
            aws eks --region eu-central-1 update-kubeconfig --name conny --role-arn arn:aws:iam::506075632353:role/eksctl-conny-cluster-ServiceRole-XNDYL4XLYY39

  install-kubectl-and-helm:
    steps:
      - run:
          name: "Install kubectl"
          command: |
            curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl
            kubectl version --client
      - run:
          name: "Install Helm"
          command: |
            curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
            chmod 700 get_helm.sh
            ./get_helm.sh

  build-and-push-docker-to-ecr:
    parameters:
      environment:
        type: string
    steps:
      - run:
          name: Install ecs-cli
          command: |
            sudo curl -Lo /usr/local/bin/ecs-cli https://amazon-ecs-cli.s3.amazonaws.com/ecs-cli-linux-amd64-latest
            sudo chmod +x /usr/local/bin/ecs-cli
            ecs-cli --version
      - run:
          name: "Docker build"
          command: |
            docker build . -t printer:<< parameters.environment >>
      - run:
          name: "Push build to ECR"
          command: |
            ecs-cli push printer:<< parameters.environment >>

jobs:
  deploy-production:
    docker:
      - image: circleci/python:3.7.1
    steps:
        - checkout
        - setup_remote_docker:
            docker_layer_caching: true
        - build-and-push-docker-to-ecr:
            environment: 'production'
        - aws-cli/install
        - aws-cli/setup
        - install-kubectl-and-helm
        - setup-infra-k8s-repo
        - deploy-service-to-eks:
            environment: 'production'
            namespace: 'default'
            service: 'printer'

  deploy-staging:
    docker:
      - image: circleci/python:3.7.1
    steps:
        - checkout
        - setup_remote_docker:
            docker_layer_caching: true
        - build-and-push-docker-to-ecr:
            environment: 'staging'
        - aws-cli/install
        - aws-cli/setup
        - install-kubectl-and-helm
        - setup-infra-k8s-repo
        - deploy-service-to-eks:
            environment: 'staging'
            namespace: 'staging'
            service: 'printer'

workflows:
  version: 2.1
  build-and-deploy:
    jobs:
      - deploy-production:
          filters:
            branches:
              only: feat/add-eks-deployment
      - deploy-staging:
          filters:
            branches:
              only: staging
